# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Location {
  id: Int!
  name: String!
  isDeleted: Boolean!
  coordinateX: Float
  coordinateY: Float
  addressDetails: String
  createdAt: DateTime
  createdById: Float
  modifiedAt: DateTime
  modifiedById: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Person {
  id: Int!
  name: String!
  code: String
}

type Status {
  id: Int!
  name: String!
  belongsToEntityType: String
  isActive: Boolean!
}

type Cargo {
  id: Int!
  description: String
  cargoWeight: Float!
}

type TripTicket {
  id: Int!
  tripId: Int!
  personId: Int
  person: Person
  cargoId: Int
  cargo: Cargo
  tripRequestId: Int
  statusId: Int
  status: Status
  createdById: Int
  createdAt: DateTime
  modifiedById: Int
  modifiedAt: DateTime
}

type Trip {
  id: Int!
  fromLocationId: Int!
  toLocationId: Int!
  departureTime: DateTime!
  arrivalTime: DateTime!
  peopleCapacity: Int!
  peopleCapacityRemaining: Int!
  cargoWeightCapacityRemaining: Int!
  cargoWeightCapacity: Int!
  tripRequestId: Int
  statusId: Int
  createdById: Int
  createdAt: DateTime
  modifiedById: Int
  modifiedAt: DateTime
  status: Status!
  fromLocation: Location!
  toLocation: Location!
  tripTickets: [TripTicket!]
}

type TripRequest {
  id: Int!
  fromLocationId: Int!
  fromLocation: Location!
  toLocationId: Int!
  toLocation: Location!
  departEarliest: DateTime
  departLatest: DateTime
  arriveEarliest: DateTime
  arriveLatest: DateTime
  createdById: Int
  createdBy: Person!
  createdAt: DateTime
  modifiedById: Int
  modifiedBy: Person!
  modifiedAt: DateTime
  remarks: String
  statusId: Int
  status: Status!
  personList: [Person!]
  cargoList: [Cargo!]
}

type Query {
  helloWorld: String!
  locations(orderBy: String): [Location!]!
  location(id: Int!): Location!
  persons: [Person!]!
  person(id: Int!): Person!
  tripRequests: [TripRequest!]!
  tripRequest(id: Int!): TripRequest!
  trips(tripFilter: TripFilter): [Trip!]!
  trip(id: Int!): Trip!
}

input TripFilter {
  earliestDeparture: DateTime
  latestDeparture: DateTime
  earliestArrival: DateTime
  latestArrival: DateTime
  statusId: Int
  fromLocationId: Int
  toLocationId: Int
  fromLocationAtoLocationB: fromLocationAtoLocationB
}

input fromLocationAtoLocationB {
  fromLocationId: Int!
  toLocationId: Int!
}

type Mutation {
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(updateLocationInput: UpdateLocationInput!): Location!
  removeLocation(id: Int!): Location!
  createPerson(createPersonInput: CreatePersonInput!): Person!
  updatePerson(updatePersonInput: UpdatePersonInput!): Person!
  createTripRequest(createTripRequestInput: CreateTripRequestInput!): TripRequest!
  createTrip(createTripInput: CreateTripInput!): Trip!
  updateTrip(updateTripInput: UpdateTripInput!): Trip!
  removeTrip(id: Int!): Trip!
  addTripTicket(addTripTicketInput: AddTripTicketInput!): Trip!
  cancelTripTicket(tripTicketId: Int!): TripTicket!
  updateTripStatus(updateStatusOfEntityInput: UpdateStatusOfEntityInput!): Trip!
}

input CreateLocationInput {
  name: String!
}

input UpdateLocationInput {
  name: String!
  id: Int!
}

input CreatePersonInput {
  name: String!
  code: String
}

input UpdatePersonInput {
  name: String!
  code: String
  id: Int!
}

input CreateTripRequestInput {
  fromLocationId: Int!
  toLocationId: Int!
  departEarliest: DateTime
  departLatest: DateTime
  arriveEarliest: DateTime
  arriveLatest: DateTime
  remarks: String
  createdById: Int
  modifiedById: Int
  personList: [TripRequestPersonInput!] = []
  cargoList: [TripRequestCargoInput!] = []
}

input TripRequestPersonInput {
  id: Int
  name: String
}

input TripRequestCargoInput {
  id: Int
  description: String
  cargoWeight: Float
}

input CreateTripInput {
  tripRequestId: Int
  fromLocationId: Int!
  toLocationId: Int!
  departureTime: DateTime!
  arrivalTime: DateTime!
  peopleCapacity: Int!
  cargoWeightCapacity: Float!
  peopleCapacityRemaining: Int
  cargoWeightCapacityRemaining: Float
}

input UpdateTripInput {
  tripRequestId: Int
  fromLocationId: Int
  toLocationId: Int
  departureTime: DateTime
  arrivalTime: DateTime
  peopleCapacity: Int
  cargoWeightCapacity: Float
  peopleCapacityRemaining: Int
  cargoWeightCapacityRemaining: Float
  id: Int!
  createdById: Int
  modifiedById: Int
}

input AddTripTicketInput {
  tripId: Int!
  person: PersonInput
  cargo: CargoInput
  dependentTicketId: Int
  tripRequestId: Int
}

input PersonInput {
  id: Int
  name: String
}

input CargoInput {
  id: Int
  description: String
  cargoWeight: Float
}

input UpdateStatusOfEntityInput {
  entityId: Int!
  entityStatusId: Int!
}